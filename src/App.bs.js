// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function App(Props) {
  var match = React.useReducer((function (state, action) {
          switch (action.tag | 0) {
            case 0 : 
                var min = action[0];
                return /* record */[
                        /* tempoMin */min,
                        /* tempoSec */state[/* tempoSec */1],
                        /* speed */60 / (min + state[/* tempoSec */1] / 60)
                      ];
            case 1 : 
                var sec = action[0];
                return /* record */[
                        /* tempoMin */state[/* tempoMin */0],
                        /* tempoSec */sec,
                        /* speed */60 / (state[/* tempoMin */0] + sec / 60)
                      ];
            case 2 : 
                return /* record */[
                        /* tempoMin */0,
                        /* tempoSec */0,
                        /* speed */action[0]
                      ];
            
          }
        }), /* record */[
        /* tempoMin */0,
        /* tempoSec */0,
        /* speed */0
      ]);
  var dispatch = match[1];
  var state = match[0];
  return React.createElement("div", undefined, React.createElement("h1", undefined, "Runcalc"), React.createElement("h2", undefined, "Tempo"), React.createElement("div", {
                  className: "form-group"
                }, React.createElement("label", undefined, "min", React.createElement("input", {
                          className: "form-control",
                          value: state[/* tempoMin */0].toString(),
                          onChange: (function ($$event) {
                              var value = $$event.target.value;
                              var tmp;
                              try {
                                tmp = Caml_format.caml_int_of_string(value);
                              }
                              catch (raw_exn){
                                var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
                                if (exn[0] === Caml_builtin_exceptions.failure) {
                                  if (exn[1] === "int_of_string") {
                                    tmp = 0;
                                  } else {
                                    throw exn;
                                  }
                                } else {
                                  throw exn;
                                }
                              }
                              return Curry._1(dispatch, /* ChangeTempoMin */Block.__(0, [tmp]));
                            })
                        }))), ":", React.createElement("label", undefined, "sec", React.createElement("input", {
                      className: "form-control",
                      value: state[/* tempoSec */1].toString(),
                      onChange: (function ($$event) {
                          var value = $$event.target.value;
                          var tmp;
                          try {
                            tmp = Caml_format.caml_int_of_string(value);
                          }
                          catch (raw_exn){
                            var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
                            if (exn[0] === Caml_builtin_exceptions.failure) {
                              if (exn[1] === "int_of_string") {
                                tmp = 0;
                              } else {
                                throw exn;
                              }
                            } else {
                              throw exn;
                            }
                          }
                          return Curry._1(dispatch, /* ChangeTempoSec */Block.__(1, [tmp]));
                        })
                    })), React.createElement("h2", undefined, "Speed"), React.createElement("div", undefined, React.createElement("label", undefined, React.createElement("input", {
                          className: "form-control",
                          value: state[/* speed */2].toFixed(2),
                          onChange: (function ($$event) {
                              var value = $$event.target.value;
                              var tmp;
                              try {
                                tmp = Caml_format.caml_float_of_string(value);
                              }
                              catch (raw_exn){
                                var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
                                if (exn[0] === Caml_builtin_exceptions.failure) {
                                  if (exn[1] === "int_of_string") {
                                    tmp = 0;
                                  } else {
                                    throw exn;
                                  }
                                } else {
                                  throw exn;
                                }
                              }
                              return Curry._1(dispatch, /* ChangeSpeed */Block.__(2, [tmp]));
                            })
                        })), "km/h"));
}

var make = App;

exports.make = make;
/* react Not a pure module */
